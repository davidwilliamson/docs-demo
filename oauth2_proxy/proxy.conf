## OAuth2 Proxy Config File
## https://github.com/bitly/oauth2_proxy
## File is in TOML format. (https://github.com/toml-lang/toml)

################# Defining access ##########################
# A github_org MUST be set.
# The github_team can be used to further restrict access (acts as a set intersection)
# Note that the owner of the github org MUST grant privileges to this app in order
# for oauth to work correctly.
provider = "github"
github_org = ""
#github_team = ""
# For github, the code defaults to "https://github.com/login/oauth/authorize"
#login_url= ""

## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
# Note: it appears that this param must be set to something or else the parser 
#       will complain
email_domains = [
    "*"
]

## <addr>:<port> to listen on for HTTP/HTTPS clients
# Since we are running inside a container, 127.0.0.1 or localhost will not work!
http_address = "0.0.0.0:4180"
# https_address = ":443"

## TLS Settings
# tls_cert_file = ""
# tls_key_file = ""

## the OAuth Redirect URL. Must match the callback set when defining the github app
# defaults to the "https://" + requested host header + "/oauth2/callback"
# redirect_url = "https://internalapp.yourcompany.com/oauth2/callback"

## the http url(s) of the upstream endpoint. If multiple, routing is based on path
# Since we are running inside a container, the host names are the from the compose file;
# localhost or 127.0.0.1 will not work!
upstreams = [
     "http://nginx:8080/"
]

## Log requests to stdout
request_logging = true

## pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream
# pass_basic_auth = true
## pass the request Host Header to upstream
## when disabled the upstream Host is used as the Host Header
# pass_host_header = true 

## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
# pass_access_token = false

## Authenticated Email Addresses File (one email per line)
# authenticated_emails_file = ""

## Htpasswd File (optional)
## Additionally authenticate against a htpasswd file. Entries must be created with "htpasswd -s" for SHA encryption
## enabling exposes a username/login signin form
# htpasswd_file = ""

## Templates
## optional directory with custom sign_in.html and error.html
# custom_templates_dir = ""

## Cookie Settings
## Name     - the cookie name
## Secret   - the seed string for secure cookies; should be 16, 24, or 32 bytes
##            for use with an AES cipher when cookie_refresh or pass_access_token
##            is set
## Domain   - (optional) cookie domain to force cookies to (ie: .yourcompany.com)
## Expire   - (duration) expire timeframe for cookie
## Refresh  - (duration) refresh the cookie when duration has elapsed after cookie was initially set.
##            Should be less than cookie_expire; set to 0 to disable.
##            On refresh, OAuth token is re-validated. 
##            (ie: 1h means tokens are refreshed on request 1hr+ after it was set)
## Secure   - secure cookies are only sent by the browser of a HTTPS connection (recommended)
## HttpOnly - httponly cookies are not readable by javascript (recommended)
# cookie_name = "_oauth2_proxy"
cookie_secret = "aey1oiDiahyae1Nu"
# cookie_domain = ""
# cookie_expire = "168h"
# cookie_refresh = "24h"
cookie_secure = true
# cookie_httponly = true
